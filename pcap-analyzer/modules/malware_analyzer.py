import re
from utils.TypeClasses.DNS import DNS
from utils.TypeClasses.SMB import SMB
alphabet = []

SMB_KEYWORDS = [ r".*atsvc.*" , r".*psexec.*" ]

def calc_math_index( string : str ) -> float:
    string_len = len(string)
    k = 0
    for ch in alphabet:
        Fi = string.count(ch)
        k += ( Fi * (Fi -1) ) / ( string_len * (string_len - 1) ) 
    return k

def is_hex(string : str)->bool:
    try:
        return int(string , 16)
    except:
        return False


def dns_tunel_check( dns_data : list[DNS] ):
    response = {}
    for dns in dns_data:
        splitted_query_name : list[str] = dns.query_name.split('.')
        if len(splitted_query_name) > 2:
            for spq_n in splitted_query_name:
                if is_hex(spq_n):
                    response[dns.query_name] = dns
    return response

def smb_commands_check( smb_data : list[SMB] ):
    response = {}
    for smb in smb_data:
        result = any( list( map( lambda x : re.match(x , smb.tcp.payload , re.I|re.M)  , SMB_KEYWORDS) ) )
        if result:
            response[smb.tcp.src_port] = smb
    return response    

def malware_analyzer(  ):
    pass